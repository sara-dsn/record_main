# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/DataFixtures/record.php'
            - '../src/DataFixtures/velvet.php'
    App\EventSubscriber\ContactSubscriber:
        arguments:
            # $mailer: "@Symfony/Component/Mailer/MailerInterface"
            Symfony\Component\Mailer\MailerInterface: '@mailer'
        tags:
            - { name: doctrine.event_subscriber }
# Cette déclaration utilise le tag doctrine.event_subscriber pour indiquer à Doctrine que la classe
#  ContactSubscriber est un subscriber(un abonné) pour les événements spécifiés dans la méthode
#   getSubscribedEvents(). Cela permet à Doctrine de détecter ce subscriber et d'activer les écoutes 
#   pour les événements de la base de données correspondants. Elle spécifie les arguments qui seront 
#   passés au constructeur de la classe lors de son instanciation (ici, le Mailer)
